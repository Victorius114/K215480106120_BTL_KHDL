import tkinter as tk
from tkinter import ttk, messagebox
import joblib
import numpy as np

# Load m√¥ h√¨nh ƒë√£ hu·∫•n luy·ªán
model = joblib.load('house_price_model.pkl')

# C√°c ƒë·∫∑c tr∆∞ng ƒë√£ d√πng khi hu·∫•n luy·ªán m√¥ h√¨nh
features = [
    'GrLivArea',      # Di·ªán t√≠ch s·ª≠ d·ª•ng
    'LotArea',        # Di·ªán t√≠ch ƒë·∫•t
    'OverallQual',    # Ch·∫•t l∆∞·ª£ng t·ªïng th·ªÉ
    'YearBuilt',      # NƒÉm x√¢y d·ª±ng
    'YearRemodAdd',   # NƒÉm s·ª≠a ch·ªØa g·∫ßn nh·∫•t
    'GarageCars',     # S·ª©c ch·ª©a xe trong gara
    'FullBath',       # S·ªë ph√≤ng t·∫Øm
    'TotalBsmtSF'     # Di·ªán t√≠ch t·∫ßng h·∫ßm
]

# T·ª∑ gi√° USD -> VND
usd_to_vnd = 25940

# H√†m d·ª± ƒëo√°n
def predict_price():
    try:
        input_values = []
        for feature in features:
            value = entries[feature].get()
            if value == '':
                raise ValueError("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.")
            input_values.append(float(value))

        input_array = np.array(input_values).reshape(1, -1)
        predicted_price_usd = model.predict(input_array)[0]
        predicted_price_vnd = predicted_price_usd * usd_to_vnd

        usd_result.set(f"{predicted_price_usd:,.2f} USD")
        vnd_result.set(f"{predicted_price_vnd:,.0f} VND")
    except Exception as e:
        messagebox.showerror("L·ªói", str(e))

# T·∫°o c·ª≠a s·ªï ch√≠nh
root = tk.Tk()
root.title("D·ª± ƒëo√°n gi√° nh√†")
root.geometry("700x600")
root.configure(bg="#f0f4f7")

# Ph√¥ng ch·ªØ ti√™u ƒë·ªÅ
title_font = ("Segoe UI", 20, "bold")
label_font = ("Segoe UI", 11)
entry_font = ("Segoe UI", 11)

# Header
header = tk.Label(root, text="üè† D·ª∞ ƒêO√ÅN GI√Å NH√Ä", font=title_font, bg="#007bff", fg="white", pady=10)
header.pack(fill="x")

# Frame nh·∫≠p li·ªáu
form_frame = ttk.Frame(root, padding=20)
form_frame.pack(fill="both", expand=True)

# C√°c nh√£n v√† √¥ nh·∫≠p
entries = {}
row = 0
for feature in features:
    label_text = {
        'GrLivArea': "Di·ªán t√≠ch s·ª≠ d·ª•ng (sqft)",
        'LotArea': "Di·ªán t√≠ch ƒë·∫•t (sqft)",
        'OverallQual': "Ch·∫•t l∆∞·ª£ng t·ªïng th·ªÉ (1-10)",
        'YearBuilt': "NƒÉm x√¢y d·ª±ng",
        'YearRemodAdd': "NƒÉm s·ª≠a ch·ªØa g·∫ßn nh·∫•t",
        'GarageCars': "S·ª©c ch·ª©a xe trong gara",
        'FullBath': "S·ªë ph√≤ng t·∫Øm",
        'TotalBsmtSF': "Di·ªán t√≠ch t·∫ßng h·∫ßm (sqft)"
    }.get(feature, feature)

    ttk.Label(form_frame, text=label_text, font=label_font).grid(row=row, column=0, sticky="w", pady=5)
    entry = ttk.Entry(form_frame, font=entry_font)
    entry.grid(row=row, column=1, pady=5, padx=10, sticky="ew")
    entries[feature] = entry
    row += 1

form_frame.columnconfigure(1, weight=1)

# N√∫t d·ª± ƒëo√°n
predict_button = ttk.Button(root, text="üîç D·ª± ƒëo√°n gi√°", command=predict_price)
predict_button.pack(pady=10)

# K·∫øt qu·∫£
result_frame = ttk.Frame(root, padding=20)
result_frame.pack(fill="x")

usd_result = tk.StringVar()
vnd_result = tk.StringVar()

ttk.Label(result_frame, text="Gi√° USD:", font=label_font).grid(row=0, column=0, sticky="e", padx=5)
ttk.Label(result_frame, textvariable=usd_result, font=("Segoe UI", 13, "bold"), foreground="#007bff").grid(row=0, column=1, sticky="w")

ttk.Label(result_frame, text="Gi√° VND (1 USD = 25,940 VND):", font=label_font).grid(row=1, column=0, sticky="e", padx=5)
ttk.Label(result_frame, textvariable=vnd_result, font=("Segoe UI", 13, "bold"), foreground="#28a745").grid(row=1, column=1, sticky="w")

# Footer
footer = tk.Label(root, text="·ª®ng d·ª•ng Machine Learning - D·ª± ƒëo√°n gi√° nh√†", bg="#f8f9fa", font=("Segoe UI", 9), pady=10)
footer.pack(fill="x", side="bottom")

root.mainloop()
